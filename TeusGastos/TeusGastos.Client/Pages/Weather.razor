@page "/weather"

<CustomPageTitle Title="Clima"></CustomPageTitle>

<h1>Clima</h1>

<p>Este componente demonstra a exibição de dados.</p>
<br/>

<MudSimpleTable>
    <thead>
    <tr>
        <th>Data</th>
        <th aria-label="Temperature in Celsius">Temp. (C)</th>
        <th aria-label="Temperature in Farenheit">Temp. (F)</th>
        <th>Resumo</th>
    </tr>
    </thead>
    <tbody>
    @if (_forecasts == null)
    {
        <tr>
            <td colspan="4" style="padding: 0;">
                @for (var i = 0; i < 5; i++)
                {
                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="37px"/>
                    if (i < 4)
                    {
                        <br/>    
                    }
                }
            </td>
        </tr>
    }
    else
    {
        @foreach (var forecast in _forecasts)
        {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        }
    }
    </tbody>
</MudSimpleTable>

@code {
    private WeatherForecast[]? _forecasts;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate a loading indicator
        await Task.Delay(Random.Shared.Next(500, 2000));

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Congelando", "Estimulante", "Frio", "Legal", "Leve", "Esquentando", "Agradável", "Quente", "Sufocante", "Escaldante" };
        _forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast
        {
            Date = startDate.AddDays(index),
            TemperatureC = Random.Shared.Next(-20, 55),
            Summary = summaries[Random.Shared.Next(summaries.Length)]
        }).ToArray();
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }

}